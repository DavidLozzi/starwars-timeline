{"version":3,"sources":["pages/Home/index.styles.js","pages/Home/index.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Era","era","rest","yearIndex","gridWidth","years","Sticky","EraLabel","Year","year","Movie","movie","index","Character","character","SeenIn","seen","seenInYear","seenInEvent","Image","img","AltTitle","Home","count","React","setYears","characters","setCharacters","seenIn","setSeenIn","setStartYear","setEndYear","zoomLevel","sortOrder","type","sort","convertYear","sortByYear","a","b","aSorter","find","s","bSorter","_newYears","_startYear","data","startYear","_endYear","endYear","console","log","i","display","events","filter","e","map","startYearDisplay","endYearDisplay","push","eventCount","length","_characters","y","_seenIn","forEach","c","some","title","imageUrl","src","alt","altTitle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86d5956f.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst topMargin = 6;\nconst gridHeight = 2; //rem\nconst gridWidth = 2; //rem\nexport const Wrapper = styled.div`\n  width: 100vh;\n  display: flex;\n  flex-flow: column wrap;\n  margin: ${gridWidth}rem;\n`;\n\nexport const Era = styled(({ era, ...rest }) => <div {...rest} />)`\n  position: absolute;\n  top: ${({ era }) => gridHeight * era.yearIndex + topMargin}rem;\n  left: ${gridWidth}rem;\n  width: ${gridWidth * 5}rem;\n  height: ${({ era }) => gridHeight * era.years}rem;\n  border-top: solid 2px #fff;\n  background-color: rgba(100,255,255,0.5);\n  z-index: 1;\n`;\n\nexport const Sticky = styled.div`\n  position: sticky;\n  top: 0;\n`;\n\nexport const EraLabel = styled.div`\n  transform: rotate(-90deg);\n  width: 10rem;\n  position: relative;\n  top: 10rem;\n  left: 0rem;\n  transform-origin: top left;\n`;\n\nexport const Year = styled(({ year, ...rest }) => <div {...rest} />)`\n  width: 100vh;\n  position: absolute;\n  border-top: solid 1px #eee;\n  left: ${gridWidth * 2}rem;\n  top: ${({ year }) => gridHeight * year.yearIndex + topMargin}rem;\n  z-index: 2;\n`;\n\nexport const Movie = styled(({ movie, index, ...rest }) => <div {...rest} />)`\n  position: absolute;\n  top: ${({ movie, index }) => gridHeight * movie.yearIndex + topMargin + index}rem;\n  left: ${({ index }) => gridWidth * 4 + index}rem;\n  width: 100vh;\n  height: ${({ movie }) => gridHeight * movie.years}rem;\n  background-color: rgba(100,100,255,0.2);\n  z-index: 3;\n  padding: 0.25rem;\n`;\n\nexport const Character = styled(({ character, ...rest }) => <div {...rest} />)`\n  position: absolute;\n  top: ${({ character }) => gridHeight * character.yearIndex + topMargin}rem;\n  left: ${({ character }) => gridWidth * 8 + character.index * (gridWidth + .5) * 2}rem;\n  width: ${gridWidth * 2}rem;\n  height: ${({ character }) => gridHeight * character.years}rem;\n  background: linear-gradient(#990, #990) no-repeat center/10px 100%;\n  border-radius: ${gridWidth + .5}rem;\n  z-index: 4;\n  padding: 0.25rem;\n  padding: 0;\n\n  ${Sticky} & {\n    z-index: 6;\n  }\n`;\n\nexport const SeenIn = styled(({ seen, ...rest }) => <div {...rest} />)`\n  position: absolute;\n  top: ${({ seen }) => gridHeight * seen.seenInYear.yearIndex + topMargin + seen.seenInEvent.index}rem;\n  left: ${({ seen }) => gridWidth * 8 + seen.character.index * (gridWidth + .5) * 2}rem;\n  z-index: 5;\n  width: ${gridWidth * 1.5}rem;\n  height: ${gridWidth * 1.5}rem;\n  text-align: center;\n  background-color: #009;\n  border-radius: 50%;\n  border: 5px solid #990;\n`;\n\nexport const Image = styled.img`\n  width: ${gridWidth * 2}rem;\n  height: ${gridWidth * 2}rem;\n  border-radius: 50%;\n`;\n\nexport const AltTitle = styled.div`\n  font-size: 13px;\n  font-style: italic;\n`;\n\nexport const CrossEvent = styled.div`\n  margin-left: ${({ count }) => (count * 105) + 100}px;\n  background-color: rgba(100,255,255,0.3);\n  width: 100px;\n  position: absolute;\n  z-index: 30;\n`;","import * as React from 'react';\nimport data from '../../data.json';\n\nimport * as Styled from './index.styles';\n\nconst Home = () => {\n  const [years, setYears] = React.useState([]);\n  const [characters, setCharacters] = React.useState([]);\n  const [seenIn, setSeenIn] = React.useState([]);\n  const [startYear, setStartYear] = React.useState(0);\n  const [endYear, setEndYear] = React.useState(0);\n\n  // zoom level, incremements of years to show\n  const [zoomLevel, setZoomLevel] = React.useState(1); \n\n  const sortOrder = [\n    { type: 'era', sort: 1},\n    { type: 'movie', sort: 2},\n    { type: 'tv', sort: 3 },\n    { type: 'character', sort: 4}\n  ];\n\n  const convertYear = (year) => {\n    if(year <= 0) return `${year * -1} BBY`;\n    if(year > 0) return `${year} ABY`;\n    return 'none';\n  };\n\n  const sortByYear = (a, b) => {\n    const aSorter = sortOrder.find(s => s.type === a.type).sort;\n    const bSorter = sortOrder.find(s => s.type === b.type).sort;\n    if (aSorter > bSorter) return 1;\n    if (aSorter < bSorter) return -1;\n    return 0;\n  };\n\n  // create 1 array of events\n  // set isSpanning, isStarting, isEnding (just in case)\n  // add index to have consistent column counts\n  // sort by era, movie, tv, book, event, character\n  // TODO create node script to generate this output so it's not realtime\n  React.useEffect(() => {\n    const _newYears = [...years];\n    const _startYear = data.sort((a, b) => a.startYear > b.startYear ? 1 : -1)[0].startYear;\n    const _endYear = data.sort((a, b) => a.endYear < b.endYear ? 1 : -1)[0].endYear;\n    console.log('start', _startYear, 'end',  _endYear);\n    setStartYear(_startYear);\n    setEndYear(_endYear);\n    let yearIndex = 0;\n    for(let i = _startYear - zoomLevel; i <= _endYear + zoomLevel; i++) {\n      const year = { year: i, display: convertYear(i) };\n      const events = data\n        .filter(e => (e.startYear === i && e.type !== 'character'))\n        .sort(sortByYear)\n        .map((e, i) => ({\n          ...e,\n          index: i,\n          yearIndex,\n          years: e.endYear - e.startYear,\n          startYearDisplay: convertYear(e.startYear),\n          endYearDisplay: convertYear(e.endYear)\n        }));\n      \n      _newYears.push({\n        ...year,\n        yearIndex,\n        events,\n        eventCount: events.length\n      });\n\n      yearIndex++;\n    }\n    setYears(_newYears);\n\n    const _characters = data\n      .filter(e => (e.type === 'character'))\n      .sort((a, b) => a.startYear > b.startYear ? 1 : -1)\n      .map((e, index) => ({\n        ...e,\n        index,\n        yearIndex: _newYears.filter(y => y.year === e.startYear)[0].yearIndex,\n        years: e.endYear - e.startYear,\n        startYearDisplay: convertYear(e.startYear),\n        endYearDisplay: convertYear(e.endYear)\n      }));\n    setCharacters(_characters);\n    \n    const _seenIn = [];\n    _characters\n      .forEach(c => {\n        if (c.seenIn && c.seenIn.length > 0) {\n          c.seenIn.forEach(seen => {\n            const seenInYear = _newYears.filter(y => y.events.some(e => e.title === seen))[0];\n            const seenInEvent = seenInYear.events.filter(e => e.title === seen)[0];\n            console.log(seenInEvent);\n            _seenIn.push({\n              character: c,\n              seenInEvent,\n              seenInYear\n            });\n          });\n        }\n      });\n    setSeenIn(_seenIn);\n  }, [data]);\n\n  return (\n    <>\n      <h1>Interactive Star Wars Timeline</h1>\n      <Styled.Wrapper>\n        {\n          years\n            .filter(({year}) => year % zoomLevel === 0)\n            .map(year => {\n              return (\n                <>\n                  <Styled.Year \n                    key={year.display}\n                    year={year}>\n                    {year.display}\n                  </Styled.Year>\n                  {year\n                    .events\n                    .filter(y => y.type === \"era\")\n                    .sort((a, b) => {\n                      if (a.index > b.index) return 1;\n                      if (a.index < b.index) return -1;\n                      return 0;\n                    })\n                    .map((e, index) => <Styled.Era\n                      era={e}\n                    >\n                      <Styled.Sticky>\n                        <Styled.EraLabel>\n                          {e.imageUrl && <Styled.Image src={e.imageUrl} alt={e.title} />}\n                          {e.title} {e.startYearDisplay} - {e.endYearDisplay}\n                          {e.altTitle && <Styled.AltTitle>{e.altTitle}</Styled.AltTitle>}\n                        </Styled.EraLabel>\n                      </Styled.Sticky>\n                    </Styled.Era>\n                    )}\n                  {year\n                    .events\n                    .filter(y => y.type === \"movie\" || y.type === \"tv\")\n                    .sort((a, b) => {\n                      if (a.index > b.index) return 1;\n                      if (a.index < b.index) return -1;\n                      return 0;\n                    })\n                    .map((e, index) => <Styled.Movie\n                      movie={e}\n                      index={index}\n                    >\n                      {e.imageUrl && <Styled.Image src={e.imageUrl} alt={e.title} />}\n                      {e.title}\n                      {e.altTitle && <Styled.AltTitle>{e.altTitle}</Styled.AltTitle>}\n                    </Styled.Movie>\n                    )}\n                </>\n              );\n            }\n            )\n        }\n        {\n          characters\n            .map(character => <Styled.Character\n              character={character}\n            >\n              <Styled.Sticky>\n                {character.imageUrl && <Styled.Image src={character.imageUrl} alt={character.title} />}\n                {character.title}\n                {character.altTitle && <Styled.AltTitle>{character.altTitle}</Styled.AltTitle>}\n              </Styled.Sticky>\n            </Styled.Character>\n            )\n        }\n        {\n          seenIn\n            .map(seen => <Styled.SeenIn\n              seen={seen}\n              title={`${seen.character.title} - ${seen.seenInEvent.title}`}\n            >\n            </Styled.SeenIn>\n            )\n        }\n      </Styled.Wrapper>\n    </>\n  );\n};\n\nexport default Home;","import Home from './pages/Home';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}